type User @model {
  id: ID! 
  email: String!
  jobs: [Job]
  status: UserStatus
}

enum UserStatus {
  registered
  verified
  disabled
}

type Job @model 
  @auth(rules:[{ allow: owner }])
  @key(name: "jobsByStatus", fields: ["status"], queryField: "jobsByStatus") {
  id: ID!
  userID: ID!
  evalUrl: String! #s3 key
  genUrl: String! #s3 key
  expiration: Int
  description: String
  maxDesigns: Int
  population_size: Int
  tournament_size: Int
  survival_size: Int
  createdAt: String
  endedAt: String
  status: JobStatus
}

enum JobStatus {
  inprogress
  completed
  expired
  cancelled
}

type GenEvalParam @model 
  @auth(rules: [{ allow: owner }])
  @key(name: "evalByJobID", fields: ["jobID"], queryField: "evalByJobID") {
  id: ID!
  jobID: ID!
  genID: ID!
  evalResult: String
  live: Boolean
  model: String
  params: String
  score: Float
}
